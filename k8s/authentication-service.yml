apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentication-service
  labels:
    app: authentication-service
spec:
  replicas: 3
  revisionHistoryLimit: 10
  minReadySeconds: 5
  selector:
    matchLabels:
      app: authentication-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        app: authentication-service
        tier: service
    spec:
      containers:
        - name: authentication-service
          image: "misis/authentication-service:1.1"
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "125m"
            limits:
              memory: "128Mi"
              cpu: "250m"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          env:
            - name: PORT
              value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: authentication-service
  labels:
    app: authentication-service
    tier: service
spec:
  type: NodePort
  ports:
    - port: 8080
  selector:
    app: authentication-service

#Описание Ingres взаимодействующего с сервисом аутентификации/авторизации
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: authentication-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: misis.auth-service.com
      http:
        paths:
          - path: /authentication-service
            pathType: Prefix
            backend:
              service:
                name: authentication-service
                port:
                  number: 80