apiVersion: apps/v1
kind: Deployment
metadata:
  name: validation-service
  labels:
    app: validation-service
spec:
  replicas: 5
  revisionHistoryLimit: 10
  minReadySeconds: 5
  selector:
    matchLabels:
      app: validation-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        app: validation-service
        tier: service
    spec:
      containers:
        - name: validation-service
          image: "misis/validation-service:1.1"
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "125m"
            limits:
              memory: "128Mi"
              cpu: "250m"
          ports:
            - containerPort: 8081
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 5
          env:
            - name: PORT
              value: "8081"

            - name: KAFKA_TOPIC
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: kafkaTopic

            - name: KAFKA_BROKER
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: kafkaBroker

            - name: KAFKA_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: kafkaUsername

            - name: KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: kafkaPassword
---
apiVersion: v1
kind: Service
metadata:
  name: validation-service
  labels:
    app: validation-service
    tier: service
spec:
  type: NodePort
  ports:
    - port: 8081
  selector:
    app: validation-service